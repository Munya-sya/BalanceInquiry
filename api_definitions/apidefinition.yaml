openapi: 3.0.1
info:
  title: Mock Balance inquiry
  version: 1.0.0
servers:
  - url: >-
      http://mock-mg-balance-inquiry-remitance.apps.dev.aro.com
security:
  - default: []
tags:
  - name: BalanceInquiry
x-wso2-basePath: /MockBalanceInquiry/1.0.0 
x-wso2-production-endpoints: "#/x-wso2-endpoints/prodEndPoint" 
#x-wso2-request-interceptor: validateRequest 
paths:
  /api/balance/services:
    post:
      tags:
        - BalanceInquiry
      description: Mock Balance Inquiry
      operationId:  Mock Balance Inquiry
      parameters:
      - name: channelCode
        in: header
        description: channelcode
        schema:
          type: string
          example: 102
      - name: messageID
        in: header
        description: Message ID
        schema:
          type: string
          example: "BI-06/20/2022"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/Failure'
        '401':
          $ref: '#/components/responses/Unauthorized'
        default:
          $ref: '#/components/responses/InternalSeverError'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - basic_auth
        optional: false
components:
  schemas:
    requestBody:
      required:
        - header
        - requestPayload
      type: object
      properties:
        header:
          $ref: '#/components/schemas/requestHeader'
        requestPayload:
          $ref: '#/components/schemas/requestPayload'
    requestHeader:
      required:
        - messageID
        - featureCode
        - serviceCode
        - serviceSubCategory
        - minorServiceVersion
        - channelCode
        - channelName
        - routeCode
        - timeStamp
        - serviceMode
        - subscribeEvents
        - callBackURL
      type: object
      properties:
        messageID:
          maxLength: 16
          description: "Message ID"
          type: string
          example: "06/20/2022"
        featureCode:
          maxLength: 3
          description: "Feature Code"
          type: string
          example: "101"
        featureName:
          maxLength: 16
          description: "Feature Name"
          type: string
          example: "FinancialInquiries"
        serviceCode:
          maxLength: 4
          description: "Service Code"
          type: string
          example: "1001"
        serviceName:
          maxLength: 16
          description: "Service Name"
          type: string
          example: "BalanceInquiry"
        serviceSubCategory:
          maxLength: 16
          description: "Service Sub Category"
          type: string
          example: "ACCOUNT"
        minorServiceVersion:
          maxLength: 3
          description: "Minor Service Version"
          type: string
          example: "1.0"
        channelCode:
          maxLength: 3
          description: "Channel Code"
          type: string
          example: "102"
        channelName:
          maxLength: 15
          description: "Channel Name"
          type: string
          example: "agency"
        routeCode:
          maxLength: 3
          description: "Route Code"
          type: string
          example: "001"
        timeStamp:
          maxLength: 14
          description: "Time Stamp"
          type: string
          example: "22222"
        serviceMode:
          maxLength: 5
          description: "Service Mode"
          type: string
          example: "sync"
        subscribeEvents:
          maxLength:  1
          description: "Subscribe Events"
          type: string
          example: "1"
        callBackURL:
          maxLength: 128
          description: "Call back URL"
          type: string
          example: ""
    requestPayload:
      required:
        - primaryData
        - additionalData
      type: object
      properties:
        primaryData:
          $ref: '#/components/schemas/primaryData'
        additionalData:
          $ref: '#/components/schemas/additionalData'
    primaryData:
      required:
        - businessKey
        - businessKeyType
      type: object
      properties: 
        businessKey:
          maxLength: 12
          description: "Business Key. Here it will be Mobile Number"
          type: string
          example: "1250585001"
        businessKeyType:
          maxLength: 12
          description: "Description of Key Type. Here it will be value ‘MSISDN’"
          type: string
          example: "AccountNumber"
    additionalData:
      required:
        - companyCode
        - chargeCustomer
      type: object
      properties:
        companyCode:
          type: string
          example: "KE0010001"
        chargeCustomer:
          type: string
          example: "NO"
    responseBody:
      required:
        - data
        - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/data'
        status:
          $ref: '#/components/schemas/status'
    data:
      required:
        - id
        - status
      type: object
      properties:
        id:
          type: string
          example: "TestId24"
        status:
          type: string
          example: "SUCCESS"
    status:
      type: object
      properties:
        code:
          type: string
          example: "200"
        message:
          type: string
          example: "SUCCESS"
        response_code:
          type: string
          example: "DP01000001001"
        success:
          type: boolean
          example: true
    Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          example: '1'
        message:
          type: string
          example: Processing failed
  responses:
    InternalSeverError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Success:
      description: Success 
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseBody'
    Failure:
      description: Failure                       
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: ''
          scopes: {}
x-wso2-disable-security: true
x-wso2-cors:
  corsConfigurationEnabled: true
  accessControlAllowOrigins:
    - '*'
  accessControlAllowCredentials: true
  accessControlAllowHeaders:
    - authorization
    - Access-Control-Allow-Origin
    - Content-Type
    - SOAPAction
    - apikey
    - Internal-Key
  accessControlAllowMethods:
    - GET
    - PUT
    - POST
    - DELETE
    - PATCH
    - OPTIONS
x-wso2-transports:
  - http
  - https
x-wso2-response-cache:
  enabled: false
  cacheTimeoutInSeconds: 300
x-wso2-endpoints:
 - prodEndPoint:
    urls:
    - http://192.168.1.103:8080
